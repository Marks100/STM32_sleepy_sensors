/*! \file
*
*   \brief      Public Header file for <%= @full_name %>
*/
/* =================================== COPYRIGHT NOTICE ============================================
* The contents of this document are protected under copyright and contain commercially and/or
* technically confidential information. The content of this document must not be used other than
* for the purpose for which it was provided nor may it be disclosed or copied (by the authorised
* recipient or otherwise) without the prior written consent of an authorised officer of Sensata
*
*   Copyright <%= Time.now.year %> Sensata Technologies.
*
***************************************************************************************************/
#ifndef <%= @short_name %>_H
#define <%= @short_name %>_H


/***************************************************************************************************
**                              Includes                                                          **
***************************************************************************************************/
#include "C_defs.h"


/***************************************************************************************************
**                              Defines                                                           **
***************************************************************************************************/
<% if @sparse == false %>
#define <%= @short_name %>_COW_MEAT     ( 0xBEEFu )    //! Cow meat is BEEF :-)
#define <%= @short_name %>_CAFFINE      ( 0xC0FFEEu )  //! A must for any day
<% else %>/* None */<% end %>


/***************************************************************************************************
**                              Enums & Data Types                                               **
***************************************************************************************************/
<% if @sparse == false %>
//! A named enum
typedef enum <%= @short_name %>_enum_name
{
    <%= @short_name %>_ENUM_NAME_VAL_A     =  0u,
    <%= @short_name %>_ENUM_NAME_VAL_B     =  1u,
    <%= @short_name %>_ENUM_NAME_VAL_C     =  2u

} <%= @short_name %>_enum_name_et;

//! structured data type makes things pretty
typedef struct <%= @short_name %>_name
{
    u8_t <%= @short_name %>_element_a;
    u8_t <%= @short_name %>_element_b;

} <%= @short_name %>_name_st;
<% else %>/* None */<% end %>


/***************************************************************************************************
**                              Exported Globals                                                  **
***************************************************************************************************/
/* None */


/***************************************************************************************************
**                              Function Prototypes                                               **
***************************************************************************************************/
FUNC(void, <%= @short_name %>_API_CODE) <%= @short_name %>_init( void );
FUNC(void, <%= @short_name %>_API_CODE) <%= @short_name %>_deinit( void );
<% if @sparse == false %> // Example Prototypes
FUNC(u16_t, <%= @short_name %>_API_CODE) <%= @short_name %>_sum( u8_t num_a, u8_t num_b );<% end %>

#endif /* #ifndef <%= @short_name %>_H */

/****************************** END OF FILE *******************************************************/
