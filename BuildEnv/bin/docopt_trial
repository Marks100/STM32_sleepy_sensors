#!/usr/bin/env ruby

require 'docopt'
require 'ruby-progressbar'

# Setup some nice things
VERSION = '1.0.0'
NAME = File.basename(__FILE__)
START_TIME = Time.now
progressbar = ProgressBar.create(:smoothing => 0.7, :progress_mark => '#', :remainder_mark => '-', :format => '%a |%b%i| %p%% %t' )

doc = <<DOCOPT
Example program.

Usage:
  NAME -n <argument> [-dl]
  NAME -c <argument>
  NAME -c <argument> -n <argument>
  NAME -h | --help
  NAME --version

Options:
   -h, --help                       Show this message.
   -c <CHAR>, --char <CHAR>         Play AC/DC.
   -n <NUMBER>, --num <NUMBER>      Play AC/.
   -l, --long                       Play AC/.
   -d, --debug                      Prints additional debug information
   -v, --version                    Print the version.
DOCOPT

$options = {}
begin
  $options = Docopt::docopt(doc, version: VERSION)
rescue Docopt::Exit => e
  puts e.message
end

# define a function that can print debug messages, but only when the option has been applied
def debug_log( message )
	if $options['--debug']
		puts message
	end
end

puts ENV["PTLD"]
debug_log( "\nFilename: #{NAME}" )
debug_log( "Debug has been set to true" )
debug_log( "options = #{$options}" )
debug_log( "current directory: #{__dir__}" )

for i in 0..99 do
	progressbar.increment 
	sleep 0.1
end


if $options['--char']
	puts "char is #{$options['--char']}"
end

if $options['--num']
	puts "num is #{$options['--num']}"
end

if $options['--long']
	puts "long option has been selected"
end


# Benchmark the script ( this only gets displayed if the '-d' is supplied )
STOP_TIME = Time.now
debug_log( "Execution time: #{STOP_TIME - START_TIME} " )